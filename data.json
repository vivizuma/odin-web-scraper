[
  {
    "title": "Introduction",
    "questions": null
  },
  {
    "title": "Emmet",
    "questions": [
      "Why should you use Emmet?",
      "What are some useful Emmet abbreviations?",
      "What syntax would you use to create this element <p class=\"text\"></p>?",
      "What syntax expands to an element with a child element inside of it? For example: <div><p></p></div>",
      "What syntax would you use to create three elements that have the same class name?"
    ]
  },
  {
    "title": "SVG",
    "questions": [
      "What is the xmlns attribute?",
      "What are some situations where you wouldn’t want to use SVG?",
      "What are the benefits of “inlining” your SVGs? What are the drawbacks?"
    ]
  },
  {
    "title": "Tables",
    "questions": [
      "What is a table?",
      "Why is it a bad idea to use HTML Tables for page layout?",
      "What are caption elements useful for?",
      "What is the scope attribute?"
    ]
  },
  {
    "title": "Default Styles",
    "questions": [
      "Why would you want to use a CSS reset?"
    ]
  },
  {
    "title": "CSS Units",
    "questions": [
      "Why would you want to use em or rem for font-size instead of px?",
      "What are some instances where you might want to use vh and vw?",
      "What are some instances where you might want to use px instead of a relative unit?"
    ]
  },
  {
    "title": "More Text Styles",
    "questions": [
      "What are the 2 ways to add fonts that are not installed on a user’s computer?",
      "What is the ‘system font stack’ and why would you want to use it?",
      "Which property would you use to increase or decrease the space between letters in a word?",
      "Which property would you use to increase or decrease the space between lines in a paragraph?"
    ]
  },
  {
    "title": "More CSS Properties",
    "questions": [
      "Which property would you use to make an element transparent?",
      "Which property would you use to make a background image tile?",
      "Which property would you use to add scrollbars to an element?",
      "Which property would you use to add a shadow behind an element?",
      "Which property would you use to create rounded corners on an element?",
      "How would you use border-radius to make a circular element?"
    ]
  },
  {
    "title": "Advanced Selectors",
    "questions": [
      "What is the difference between the child combinator and the descendant combinator?",
      "How does the syntax of pseudo-classes and pseudo-elements differ?",
      "Do pseudo-classes exist somewhere in HTML? Do pseudo-elements?",
      "Name two ways you could select every second child of an element, starting with the first.",
      "What is the difference between div:first-child and div:last-child? What will each select?",
      "What selector would you use to style a button a user is currently hovering over? How about one that is currently being clicked on?",
      "How could you select all input elements with a type of text?",
      "How could you select all classes that begin with thunder?"
    ]
  },
  {
    "title": "Positioning",
    "questions": [
      "What is the difference between static and relative positioning?",
      "What is absolute positioning useful for?",
      "What is the difference between fixed and sticky positioning?"
    ]
  },
  {
    "title": "CSS Functions",
    "questions": [
      "What are the four CSS math functions we covered above?",
      "How do we use CSS math functions in our CSS?",
      "How can CSS functions help make websites and applications more responsive?"
    ]
  },
  {
    "title": "Custom Properties",
    "questions": [
      "How would you declare a custom property with a name of text-color?",
      "How would you access a custom property with a name of background-color?",
      "Where would you declare a custom property to have its scope be global and accessible by all other selectors?",
      "Where would you declare a custom property so that a user’s theme setting from their OS or browser was taken into account?"
    ]
  },
  {
    "title": "Browser Compatibility",
    "questions": [
      "What is the most used browser currently?",
      "What was the original name of the first web browser?",
      "How are mobile browsers different on Apple mobile operating systems from Android?"
    ]
  },
  {
    "title": "Frameworks and Preprocessors",
    "questions": [
      "What are some advantages of using a CSS framework?",
      "What are some disadvantages of using a CSS framework?",
      "What are some advantages of using a CSS preprocessor?",
      "What are some disadvantages of using a CSS preprocessor?"
    ]
  },
  {
    "title": "Form Basics",
    "questions": [
      "Explain what the form element is for and what two attributes it should always include.",
      "Explain what form controls are at a high level.",
      "What is the name attribute for?",
      "What are the three most common form controls you can use for allowing users to select predefined options?",
      "What are the three types of buttons in HTML?",
      "What are the two most challenging aspects of styling forms?"
    ]
  },
  {
    "title": "Form Validation",
    "questions": [
      "What does the required validation do?",
      "What validations can you use for checking text length?",
      "How can you validate the minimum and maximum of numeric inputs?",
      "What can you use the pattern validation for?",
      "What pseudo CSS selectors are available for styling valid and invalid inputs?"
    ]
  },
  {
    "title": "Project: Sign-up Form",
    "questions": null
  },
  {
    "title": "Introduction to Grid",
    "questions": [
      "How can you use Flex to make a two-dimensional layout?",
      "Why was CSS Grid introduced?",
      "Which CSS layout module would you use to easily make equal sized items in a container?"
    ]
  },
  {
    "title": "Creating a Grid",
    "questions": [
      "How does an HTML element become a grid item?",
      "What is the space between lines on the grid?",
      "How do you set gutters (also known as alleys) in the grid?",
      "Describe what happens when you have more content than defined tracks.",
      "How could you change the size for those undefined tracks?"
    ]
  },
  {
    "title": "Positioning Grid Elements",
    "questions": [
      "Explain the difference between a track and a line.",
      "What is the smallest unit on a grid?",
      "What kind of value do we give to the grid-column-start or grid-column-end properties?",
      "Which property can we use to combine all the start and end values for a grid item?",
      "Which grid container property can map out a visual structure of grid items?"
    ]
  },
  {
    "title": "Advanced Grid Properties",
    "questions": [
      "How do you create several grid tracks of the same size without manually typing each one out?",
      "What is the difference between a static and dynamic size value?",
      "How can you assign a grid track a flexible value that changes depending on the remaining space available in the grid?",
      "How can you assign grid tracks an uneven distribution of the remaining space in a grid?",
      "Which CSS functions will return the smallest or largest value supplied to them?",
      "Which CSS Grid-only function allows you to supply a minimum and maximum track size that is calculated in realtime?",
      "Which global CSS function allows you to supply a minimum, ideal, and maximum value that is calculated in realtime?",
      "What attribute of repeat() can be used to fill in as many grid tracks as possible, given certain constraints?",
      "What is the difference between auto-fit and auto-fill?"
    ]
  },
  {
    "title": "Using Flexbox and Grid",
    "questions": [
      "When might you use Flexbox over Grid?",
      "When might you use Grid over Flexbox?",
      "When might you use the two of these tools together?"
    ]
  },
  {
    "title": "Project: Admin Dashboard",
    "questions": null
  },
  {
    "title": "Transforms",
    "questions": [
      "What are the four main functions of the transform property?",
      "Which function can be used to move an object through space on the X, Y, or Z axis?",
      "Which function can be used to make an object larger or smaller on the X, Y, or Z axis?",
      "What additional function is required for 3D transforms?"
    ]
  },
  {
    "title": "Transitions",
    "questions": [
      "Are all CSS properties animatable?",
      "What are the long and short-hand notations for transitions?",
      "What is the stacking context?",
      "Why do you need to keep an eye on repaints?"
    ]
  },
  {
    "title": "Keyframes",
    "questions": [
      "What are the long and short-hand notations for CSS animations?",
      "How do you add keyframes to an animation?",
      "When would you use an animation over a transition (and vice versa)?"
    ]
  },
  {
    "title": "Introduction to Web Accessibility",
    "questions": [
      "What is web accessibility?",
      "Who truly benefits from accessibility features?"
    ]
  },
  {
    "title": "The Web Content Accessibility Guidelines (WCAG)",
    "questions": [
      "What is the purpose of the Web Content Accessibility Guidelines?",
      "What are the 4 principles of the WCAG?"
    ]
  },
  {
    "title": "Semantic HTML",
    "questions": [
      "Why is semantic HTML important for accessibility?",
      "What are the seven HTML elements that define landmarks on a page?"
    ]
  },
  {
    "title": "Accessible Colors",
    "questions": [
      "What is a contrast ratio?",
      "What are two ways you can check a contrast ratio using your dev tools?",
      "What should you avoid when conveying information to users?"
    ]
  },
  {
    "title": "Keyboard Navigation",
    "questions": [
      "What are two things that interactive elements must have for keyboard users?",
      "What are focus styles?",
      "Why should you never completely remove focus styles from an element?",
      "What is the tab order?",
      "What is the best way to hide hidden content from assistive technologies?"
    ]
  },
  {
    "title": "Meaningful Text",
    "questions": [
      "What are three rules you should follow in order to provide meaningful links?",
      "What information should you inform users of in order to provide meaningful error messages in forms?",
      "When should you use the empty string/null value for the alt attribute?"
    ]
  },
  {
    "title": "WAI-ARIA",
    "questions": [
      "What purpose does WAI-ARIA serve?",
      "What are the four things ARIA can’t do?",
      "What are the five rules of ARIA?",
      "What is the accessibility tree?",
      "What are the differences between the three ARIA labels?",
      "What does the aria-hidden attribute do?"
    ]
  },
  {
    "title": "Accessibility Auditing",
    "questions": [
      "What are some of the various accessibility features available in your browser’s DevTools?",
      "Which third-party accessibility auditing tool is available in the Chrome DevTools by default?"
    ]
  },
  {
    "title": "Introduction to Responsive Design",
    "questions": [
      "What is Responsive Design?"
    ]
  },
  {
    "title": "Natural Responsiveness",
    "questions": [
      "Why should you avoid fixed width?",
      "Why should you avoid fixed height?",
      "In what situations might it be appropriate to use a fixed height or width?",
      "Why should you avoid percentages?"
    ]
  },
  {
    "title": "Responsive Images",
    "questions": [
      "What is the main difference between object-fit and background-size?",
      "How can you define a width and a height on an img without distorting it?",
      "Why would you want to provide different images at different screen resolutions?",
      "When would you want to use an img with a srcset vs a picture?"
    ]
  },
  {
    "title": "Media Queries",
    "questions": [
      "How do you define a media query to create a mobile layout for your site?",
      "What is the difference between max-width and min-width in a media query definition?"
    ]
  },
  {
    "title": "Project: Homepage",
    "questions": null
  },
  {
    "title": "Introduction",
    "questions": null
  },
  {
    "title": "Emmet",
    "questions": [
      "Why should you use Emmet?",
      "What are some useful Emmet abbreviations?",
      "What syntax would you use to create this element <p class=\"text\"></p>?",
      "What syntax expands to an element with a child element inside of it? For example: <div><p></p></div>",
      "What syntax would you use to create three elements that have the same class name?"
    ]
  },
  {
    "title": "SVG",
    "questions": [
      "What is the xmlns attribute?",
      "What are some situations where you wouldn’t want to use SVG?",
      "What are the benefits of “inlining” your SVGs? What are the drawbacks?"
    ]
  },
  {
    "title": "Tables",
    "questions": [
      "What is a table?",
      "Why is it a bad idea to use HTML Tables for page layout?",
      "What are caption elements useful for?",
      "What is the scope attribute?"
    ]
  },
  {
    "title": "Default Styles",
    "questions": [
      "Why would you want to use a CSS reset?"
    ]
  },
  {
    "title": "CSS Units",
    "questions": [
      "Why would you want to use em or rem for font-size instead of px?",
      "What are some instances where you might want to use vh and vw?",
      "What are some instances where you might want to use px instead of a relative unit?"
    ]
  },
  {
    "title": "More Text Styles",
    "questions": [
      "What are the 2 ways to add fonts that are not installed on a user’s computer?",
      "What is the ‘system font stack’ and why would you want to use it?",
      "Which property would you use to increase or decrease the space between letters in a word?",
      "Which property would you use to increase or decrease the space between lines in a paragraph?"
    ]
  },
  {
    "title": "More CSS Properties",
    "questions": [
      "Which property would you use to make an element transparent?",
      "Which property would you use to make a background image tile?",
      "Which property would you use to add scrollbars to an element?",
      "Which property would you use to add a shadow behind an element?",
      "Which property would you use to create rounded corners on an element?",
      "How would you use border-radius to make a circular element?"
    ]
  },
  {
    "title": "Advanced Selectors",
    "questions": [
      "What is the difference between the child combinator and the descendant combinator?",
      "How does the syntax of pseudo-classes and pseudo-elements differ?",
      "Do pseudo-classes exist somewhere in HTML? Do pseudo-elements?",
      "Name two ways you could select every second child of an element, starting with the first.",
      "What is the difference between div:first-child and div:last-child? What will each select?",
      "What selector would you use to style a button a user is currently hovering over? How about one that is currently being clicked on?",
      "How could you select all input elements with a type of text?",
      "How could you select all classes that begin with thunder?"
    ]
  },
  {
    "title": "Positioning",
    "questions": [
      "What is the difference between static and relative positioning?",
      "What is absolute positioning useful for?",
      "What is the difference between fixed and sticky positioning?"
    ]
  },
  {
    "title": "CSS Functions",
    "questions": [
      "What are the four CSS math functions we covered above?",
      "How do we use CSS math functions in our CSS?",
      "How can CSS functions help make websites and applications more responsive?"
    ]
  },
  {
    "title": "Custom Properties",
    "questions": [
      "How would you declare a custom property with a name of text-color?",
      "How would you access a custom property with a name of background-color?",
      "Where would you declare a custom property to have its scope be global and accessible by all other selectors?",
      "Where would you declare a custom property so that a user’s theme setting from their OS or browser was taken into account?"
    ]
  },
  {
    "title": "Browser Compatibility",
    "questions": [
      "What is the most used browser currently?",
      "What was the original name of the first web browser?",
      "How are mobile browsers different on Apple mobile operating systems from Android?"
    ]
  },
  {
    "title": "Frameworks and Preprocessors",
    "questions": [
      "What are some advantages of using a CSS framework?",
      "What are some disadvantages of using a CSS framework?",
      "What are some advantages of using a CSS preprocessor?",
      "What are some disadvantages of using a CSS preprocessor?"
    ]
  },
  {
    "title": "Form Basics",
    "questions": [
      "Explain what the form element is for and what two attributes it should always include.",
      "Explain what form controls are at a high level.",
      "What is the name attribute for?",
      "What are the three most common form controls you can use for allowing users to select predefined options?",
      "What are the three types of buttons in HTML?",
      "What are the two most challenging aspects of styling forms?"
    ]
  },
  {
    "title": "Form Validation",
    "questions": [
      "What does the required validation do?",
      "What validations can you use for checking text length?",
      "How can you validate the minimum and maximum of numeric inputs?",
      "What can you use the pattern validation for?",
      "What pseudo CSS selectors are available for styling valid and invalid inputs?"
    ]
  },
  {
    "title": "Project: Sign-up Form",
    "questions": null
  },
  {
    "title": "Introduction to Grid",
    "questions": [
      "How can you use Flex to make a two-dimensional layout?",
      "Why was CSS Grid introduced?",
      "Which CSS layout module would you use to easily make equal sized items in a container?"
    ]
  },
  {
    "title": "Creating a Grid",
    "questions": [
      "How does an HTML element become a grid item?",
      "What is the space between lines on the grid?",
      "How do you set gutters (also known as alleys) in the grid?",
      "Describe what happens when you have more content than defined tracks.",
      "How could you change the size for those undefined tracks?"
    ]
  },
  {
    "title": "Positioning Grid Elements",
    "questions": [
      "Explain the difference between a track and a line.",
      "What is the smallest unit on a grid?",
      "What kind of value do we give to the grid-column-start or grid-column-end properties?",
      "Which property can we use to combine all the start and end values for a grid item?",
      "Which grid container property can map out a visual structure of grid items?"
    ]
  },
  {
    "title": "Advanced Grid Properties",
    "questions": [
      "How do you create several grid tracks of the same size without manually typing each one out?",
      "What is the difference between a static and dynamic size value?",
      "How can you assign a grid track a flexible value that changes depending on the remaining space available in the grid?",
      "How can you assign grid tracks an uneven distribution of the remaining space in a grid?",
      "Which CSS functions will return the smallest or largest value supplied to them?",
      "Which CSS Grid-only function allows you to supply a minimum and maximum track size that is calculated in realtime?",
      "Which global CSS function allows you to supply a minimum, ideal, and maximum value that is calculated in realtime?",
      "What attribute of repeat() can be used to fill in as many grid tracks as possible, given certain constraints?",
      "What is the difference between auto-fit and auto-fill?"
    ]
  },
  {
    "title": "Using Flexbox and Grid",
    "questions": [
      "When might you use Flexbox over Grid?",
      "When might you use Grid over Flexbox?",
      "When might you use the two of these tools together?"
    ]
  },
  {
    "title": "Project: Admin Dashboard",
    "questions": null
  },
  {
    "title": "Transforms",
    "questions": [
      "What are the four main functions of the transform property?",
      "Which function can be used to move an object through space on the X, Y, or Z axis?",
      "Which function can be used to make an object larger or smaller on the X, Y, or Z axis?",
      "What additional function is required for 3D transforms?"
    ]
  },
  {
    "title": "Transitions",
    "questions": [
      "Are all CSS properties animatable?",
      "What are the long and short-hand notations for transitions?",
      "What is the stacking context?",
      "Why do you need to keep an eye on repaints?"
    ]
  },
  {
    "title": "Keyframes",
    "questions": [
      "What are the long and short-hand notations for CSS animations?",
      "How do you add keyframes to an animation?",
      "When would you use an animation over a transition (and vice versa)?"
    ]
  },
  {
    "title": "Introduction to Web Accessibility",
    "questions": [
      "What is web accessibility?",
      "Who truly benefits from accessibility features?"
    ]
  },
  {
    "title": "The Web Content Accessibility Guidelines (WCAG)",
    "questions": [
      "What is the purpose of the Web Content Accessibility Guidelines?",
      "What are the 4 principles of the WCAG?"
    ]
  },
  {
    "title": "Semantic HTML",
    "questions": [
      "Why is semantic HTML important for accessibility?",
      "What are the seven HTML elements that define landmarks on a page?"
    ]
  },
  {
    "title": "Accessible Colors",
    "questions": [
      "What is a contrast ratio?",
      "What are two ways you can check a contrast ratio using your dev tools?",
      "What should you avoid when conveying information to users?"
    ]
  },
  {
    "title": "Keyboard Navigation",
    "questions": [
      "What are two things that interactive elements must have for keyboard users?",
      "What are focus styles?",
      "Why should you never completely remove focus styles from an element?",
      "What is the tab order?",
      "What is the best way to hide hidden content from assistive technologies?"
    ]
  },
  {
    "title": "Meaningful Text",
    "questions": [
      "What are three rules you should follow in order to provide meaningful links?",
      "What information should you inform users of in order to provide meaningful error messages in forms?",
      "When should you use the empty string/null value for the alt attribute?"
    ]
  },
  {
    "title": "WAI-ARIA",
    "questions": [
      "What purpose does WAI-ARIA serve?",
      "What are the four things ARIA can’t do?",
      "What are the five rules of ARIA?",
      "What is the accessibility tree?",
      "What are the differences between the three ARIA labels?",
      "What does the aria-hidden attribute do?"
    ]
  },
  {
    "title": "Accessibility Auditing",
    "questions": [
      "What are some of the various accessibility features available in your browser’s DevTools?",
      "Which third-party accessibility auditing tool is available in the Chrome DevTools by default?"
    ]
  },
  {
    "title": "Introduction to Responsive Design",
    "questions": [
      "What is Responsive Design?"
    ]
  },
  {
    "title": "Natural Responsiveness",
    "questions": [
      "Why should you avoid fixed width?",
      "Why should you avoid fixed height?",
      "In what situations might it be appropriate to use a fixed height or width?",
      "Why should you avoid percentages?"
    ]
  },
  {
    "title": "Responsive Images",
    "questions": [
      "What is the main difference between object-fit and background-size?",
      "How can you define a width and a height on an img without distorting it?",
      "Why would you want to provide different images at different screen resolutions?",
      "When would you want to use an img with a srcset vs a picture?"
    ]
  },
  {
    "title": "Media Queries",
    "questions": [
      "How do you define a media query to create a mobile layout for your site?",
      "What is the difference between max-width and min-width in a media query definition?"
    ]
  },
  {
    "title": "Project: Homepage",
    "questions": null
  },
  {
    "title": "How This Course Will Work",
    "questions": null
  },
  {
    "title": "Introduction To React",
    "questions": [
      "What is the purpose of React?",
      "What are the benefits of using React?"
    ]
  },
  {
    "title": "Setting Up A React Environment",
    "questions": [
      "What are some of the ways we can start a new React project?",
      "Why should we initially be using pre-made toolchains instead of making our own?",
      "What is Vite and why would we use it?",
      "What command can we run to scaffold a new React project using Vite?",
      "What is in the public folder?",
      "What is in the src folder?",
      "Why are the React Developer Tools useful?"
    ]
  },
  {
    "title": "React Components",
    "questions": [
      "What does a React element look like?",
      "How would you create a functional component?",
      "How do you export and then import a component?"
    ]
  },
  {
    "title": "What Is JSX?",
    "questions": null
  },
  {
    "title": "Rendering Techniques",
    "questions": [
      "How do you render a list of elements/components in JSX?",
      "What are the ways you could render UI conditionally?",
      "How would you conditionally return JSX?"
    ]
  },
  {
    "title": "Keys In React",
    "questions": [
      "Why does React need keys?",
      "How do you use keys?",
      "Where should the key value ideally come from?",
      "When can we use an array index as the key value?",
      "What is an anti-pattern when using keys?"
    ]
  },
  {
    "title": "Passing Data Between Components",
    "questions": [
      "How does data flow between React components? From child to parent? From parent to child? Both?",
      "Why do we use props in React?",
      "How do we define default properties on a React component? What are some benefits in doing so?",
      "How can we pass functions as props?"
    ]
  },
  {
    "title": "Introduction To State",
    "questions": [
      "What is state?",
      "What is the useState hook and how to use it?",
      "What happens to the component when one of its state is changed?",
      "What are some of the rules of hooks?"
    ]
  },
  {
    "title": "More On State",
    "questions": [
      "What should you keep in mind while declaring state?",
      "Why should we always use setState to update our state?",
      "What does “state as a snapshot” mean?",
      "What’s the difference between passing a value vs a callback to the setState function?",
      "Why should we always provide a new Object to setState?",
      "Why would you want to control a component?"
    ]
  },
  {
    "title": "Project: CV Application",
    "questions": null
  },
  {
    "title": "How To Deal With Side Effects",
    "questions": [
      "What is an effect?",
      "What constitutes a useEffect hook?",
      "What is the one question we can ask to know when to use an effect?",
      "What do we mean by lifting up the state?"
    ]
  },
  {
    "title": "Project: Memory Card",
    "questions": null
  },
  {
    "title": "Class Based Components",
    "questions": [
      "How do props get used in a class-based component?",
      "How does JSX get displayed?",
      "How do we deal with state in a class-based component?",
      "How do you restore the context of this in a method?"
    ]
  },
  {
    "title": "Component Lifecycle Methods",
    "questions": [
      "What is the only required lifecycle method?",
      "What lifecycle method should you use for initial data fetching?",
      "When you want to act upon change of the DOM, or of state, what lifecycle method would you use?",
      "When performing cleanup actions, what lifecycle method should be used?",
      "How does the useEffect hook combine some of the lifecycle methods?"
    ]
  },
  {
    "title": "Introduction To React Testing",
    "questions": [
      "What packages are required for React testing?",
      "What is the significance of the user-event package?",
      "What does the render method do?",
      "What is the most preferred method for querying?",
      "How would you test for a click event with userEvent?",
      "What is the advantage of snapshot tests?",
      "What are the disadvantages of snapshot tests?"
    ]
  },
  {
    "title": "Mocking Callbacks And Components",
    "questions": [
      "How can you mock a callback handler?",
      "How can you mock a child component?"
    ]
  },
  {
    "title": "Type Checking With PropTypes",
    "questions": [
      "How would we set up a basic implementation of PropTypes?",
      "If we pass in a prop to a component that has a defaultProp defined, what would happen?",
      "What is the difference between PropTypes and TypeScript?"
    ]
  },
  {
    "title": "React Router",
    "questions": [
      "What does client-side routing mean?",
      "How do you set up a basic router?",
      "What should be used in place of “a” tags to enable client-side routing?",
      "How do you create nested routes?",
      "What do you mean by dynamic segments or URL params?",
      "How do you add a “catch-all” route?",
      "How do you pass data from parent to child through an <Outlet /> component?",
      "How do you create protected routes?"
    ]
  },
  {
    "title": "Fetching Data In React",
    "questions": [
      "How can you fetch data from an API in React?",
      "Why should you manually throw errors in fetch requests?",
      "How can you avoid waterfalling requests?"
    ]
  },
  {
    "title": "Styling React Applications",
    "questions": [
      "How can you use CSS Modules in your React app?",
      "What does CSS-in-JS mean?",
      "What are component libraries?"
    ]
  },
  {
    "title": "Project: Shopping Cart",
    "questions": null
  },
  {
    "title": "Managing State With The Context API",
    "questions": [
      "What are the benefits of using the Context API over passing props down through multiple levels of components?",
      "What are the drawbacks in using the Context API?",
      "What are the ways you can avoid prop drilling?"
    ]
  },
  {
    "title": "Reducing State",
    "questions": [
      "What are reducers?",
      "How would you declare a reducer?",
      "What does the dispatch function do?",
      "What steps can you follow to migrate from useState to useReducer?"
    ]
  },
  {
    "title": "Refs And Memoization",
    "questions": [
      "Why should you prefer useRef hook over other DOM manipulation methods like querySelector?",
      "What is the difference between useMemo and useCallback?",
      "How do useMemo and useCallback help optimize the performance of React components?",
      "When should you memoize a value?"
    ]
  },
  {
    "title": "Using Ruby On Rails For Your Backend",
    "questions": [
      "How do you load custom JavaScript in a given Rails view page?",
      "How does “unobtrusive JavaScript” work?",
      "How can you pass data from your Rails app to your JavaScript?",
      "Why would you want to use AJAX to load large batches of data?"
    ]
  },
  {
    "title": "Project: Where's Waldo (A Photo Tagging App)",
    "questions": null
  },
  {
    "title": "Project: Messaging App",
    "questions": null
  },
  {
    "title": "Conclusion",
    "questions": null
  },
  {
    "title": "How This Course Will Work",
    "questions": null
  },
  {
    "title": "Introduction to Web Development",
    "questions": null
  },
  {
    "title": "Motivation and Mindset",
    "questions": null
  },
  {
    "title": "Asking For Help",
    "questions": [
      "Describe the “XY Problem”.",
      "Name the 5 things your question should include."
    ]
  },
  {
    "title": "Join the Odin Community",
    "questions": null
  },
  {
    "title": "Computer Basics",
    "questions": [
      "Is Windows an operating system or an application?",
      "What’s the difference between open source and closed source software?",
      "What are some use cases of a screenshot?",
      "Give an example of a weak and a strong password."
    ]
  },
  {
    "title": "How Does the Web Work?",
    "questions": [
      "What is a web server?",
      "What is a network?",
      "What is the internet?",
      "What is an IP address?",
      "What is a router?",
      "What is an ISP?",
      "What are packets and how are they used to transfer data?",
      "What is a client?",
      "What is a server?",
      "What is a web page?",
      "What is a web browser?",
      "What is a search engine?",
      "What is a DNS request?",
      "Which browser are you currently using?",
      "In your own words, describe the process that takes place when you initiate a search on google.com in terms of what we discussed on this section."
    ]
  },
  {
    "title": "Installation Overview",
    "questions": null
  },
  {
    "title": "Installations",
    "questions": [
      "What operating systems does The Odin Project support?",
      "What browser does The Odin Project support?"
    ]
  },
  {
    "title": "Text Editors",
    "questions": null
  },
  {
    "title": "Command Line Basics",
    "questions": [
      "What is the command line?",
      "How do you open the command line on your computer?",
      "How can you navigate to a particular directory?",
      "Where will cd on its own navigate you to?",
      "Where will cd .. navigate you to?",
      "How do you display the name of the directory you are currently in?",
      "How do you display the contents of the directory you are currently in?",
      "How do you create a new directory?",
      "How do you create a new file?",
      "How do you destroy a directory or file?",
      "How do you rename a directory or file?"
    ]
  },
  {
    "title": "Setting up Git",
    "questions": null
  },
  {
    "title": "Introduction to Git",
    "questions": [
      "What kind of program is Git?",
      "What are the differences between Git and a text editor in terms of what they save and their record keeping?",
      "Does Git work at a local or remote level?",
      "Does GitHub work at a local or remote level?",
      "Why is Git useful for developers?",
      "Why are Git and GitHub useful for a team of developers?"
    ]
  },
  {
    "title": "Git Basics",
    "questions": [
      "How do you create a new repository on GitHub?",
      "How do you copy a repository onto your local machine from GitHub?",
      "What is the default name of your remote connection?",
      "Explain what origin is in git push origin main.",
      "Explain what main is in git push origin main.",
      "Explain the two-stage system that Git uses to save files.",
      "How do you check the status of your current repository?",
      "How do you add files to the staging area in git?",
      "How do you commit the files in the staging area and add a descriptive message?",
      "How do you push your changes to your repository on GitHub?",
      "How do you look at the history of your previous commits?"
    ]
  },
  {
    "title": "Introduction to HTML and CSS",
    "questions": [
      "What do HTML and CSS stand for?",
      "Between HTML and CSS, which would you use for putting paragraphs of text on a webpage?",
      "Between HTML and CSS, which would you use for changing the font and background color of a button?",
      "What is the difference between HTML, CSS and JavaScript?"
    ]
  },
  {
    "title": "Elements and Tags",
    "questions": [
      "What is an HTML tag?",
      "What are the three parts of an HTML element?"
    ]
  },
  {
    "title": "HTML Boilerplate",
    "questions": [
      "What is the purpose of the doctype declaration?",
      "What is the HTML element?",
      "What is the purpose of the head element?",
      "What is the purpose of the body element?"
    ]
  },
  {
    "title": "Working with Text",
    "questions": [
      "How do you create a paragraph in HTML?",
      "How do you create a heading in HTML?",
      "How many different levels of headings are there and what is the difference between them?",
      "What element should you use to make text bold and important?",
      "What element should you use to make text italicized to add emphasis to it?",
      "What relationship does an element have with any nested elements within it?",
      "What relationship do two elements have if they are at the same level of nesting?",
      "How do you create HTML comments?"
    ]
  },
  {
    "title": "Lists",
    "questions": [
      "What HTML element is used to create an unordered list?",
      "What HTML element is used to create an ordered list?",
      "What HTML element is used to create list items within both unordered and ordered lists?"
    ]
  },
  {
    "title": "Links and Images",
    "questions": [
      "What element is used to create a link?",
      "What is an attribute?",
      "What attribute tells links where to go to?",
      "What security considerations must be taken if you wish to use the target attribute to open links in a new tab/window?",
      "What is the difference between an absolute and relative link?",
      "Which element is used to display an image?",
      "What two attributes do images always need to have?",
      "How do you access a parent directory in a filepath?",
      "What are the four main image formats that you can use for images on the web?"
    ]
  },
  {
    "title": "Commit Messages",
    "questions": [
      "What are two benefits of having well-written commit messages and a good commit history?",
      "How many characters should the subject line of your commit message be?"
    ]
  },
  {
    "title": "Project: Recipes",
    "questions": null
  },
  {
    "title": "Intro to CSS",
    "questions": [
      "What is the syntax for class and ID selectors?",
      "How would you apply a single rule to two different selectors?",
      "Given an element that has an id of title and a class of primary, how would you use both attributes for a single rule?",
      "What does the descendant combinator do?",
      "What are the names of the three ways to add CSS to HTML?",
      "What are the main differences between the three ways of adding CSS to HTML?"
    ]
  },
  {
    "title": "The Cascade",
    "questions": [
      "Between a rule that uses one class selector and a rule that uses three type selectors, which rule has the higher specificity?"
    ]
  },
  {
    "title": "Inspecting HTML and CSS",
    "questions": [
      "How do you select a specific element on your page with your browser’s developer tools?",
      "What does a strikethrough in a CSS declaration mean in your browser’s developer tools?",
      "How do you change CSS in real time on specific elements of a web page with your browser’s developer tools?"
    ]
  },
  {
    "title": "The Box Model",
    "questions": [
      "From inside to outside, what is the order of box-model properties?",
      "What does the box-sizing CSS property do?",
      "What is the difference between the standard and alternative box model?",
      "Would you use margin or padding to create more space between 2 elements?",
      "Would you use margin or padding to create more space between the contents of an element and its border?",
      "Would you use margin or padding if you wanted two elements to overlap each other?",
      "How do you set the alternative box model for all of your elements?",
      "How do you center an element horizontally?"
    ]
  },
  {
    "title": "Block and Inline",
    "questions": [
      "What is the difference between a block element and an inline element?",
      "What is the difference between an inline element and an inline-block element?",
      "Is an h1 block or inline?",
      "Is button block or inline?",
      "Is div block or inline?",
      "Is span block or inline?"
    ]
  },
  {
    "title": "Introduction to Flexbox",
    "questions": [
      "What’s the difference between a flex container and a flex item?",
      "How do you create a flex item?"
    ]
  },
  {
    "title": "Growing and Shrinking",
    "questions": [
      "What are the 3 values defined in the shorthand flex property (e.g. flex: 1 1 auto)?",
      "What are the 3 defined values for the flex shorthand flex:auto?"
    ]
  },
  {
    "title": "Axes",
    "questions": [
      "How do you make flex items arrange themselves vertically instead of horizontally?",
      "In a column flex-container, what does flex-basis refer to?",
      "In a row flex-container, what does flex-basis refer to?",
      "Why do the previous two questions have different answers?"
    ]
  },
  {
    "title": "Alignment",
    "questions": [
      "What is the difference between justify-content and align-items?",
      "How do you use flexbox to completely center a div inside a flex container?",
      "What’s the difference between justify-content: space-between and justify-content: space-around?"
    ]
  },
  {
    "title": "Project: Landing Page",
    "questions": null
  },
  {
    "title": "Variables and Operators",
    "questions": [
      "Name the three ways to declare a variable",
      "Which of the three variable declarations should you avoid and why?",
      "What rules should you follow when naming variables?",
      "What happens when you add numbers and strings together?",
      "How does the Modulo (%), or Remainder, operator work?",
      "Explain the difference between == and ===.",
      "When would you receive a NaN result?",
      "How do you increment and decrement a number?",
      "Explain the difference between prefixing and postfixing increment/decrement operators.",
      "What is operator precedence and how is it handled in JS?",
      "How do you access developer tools and the console?",
      "How do you log information to the console?",
      "What does unary plus operator do to string representations of integers? eg. +”10”"
    ]
  },
  {
    "title": "Data Types and Conditionals",
    "questions": [
      "What are the eight data types in JavaScript?",
      "Which data type is NOT primitive?",
      "What is the relationship between null and undefined?",
      "What is the difference between single, double, and backtick quotes for strings?",
      "What is the term for joining strings together?",
      "Which type of quote lets you embed variables/expressions in a string?",
      "How do you embed variables/expressions in a string?",
      "How do you use escape characters in a string?",
      "What is the difference between the slice/substring/substr string methods?",
      "What are the three logical operators, and what do they stand for?",
      "What are the comparison operators?",
      "What are truthy and falsy values?",
      "What are the falsy values in JavaScript?",
      "What are conditionals?",
      "What is the syntax for an if/else conditional?",
      "What is the syntax for a switch statement?",
      "What is the syntax for a ternary operator?",
      "What is nesting?"
    ]
  },
  {
    "title": "JavaScript Developer Tools",
    "questions": [
      "How do you open developer tools?",
      "How do you change screen size of a website using developer tools?",
      "What is a breakpoint?",
      "How do you set a breakpoint?"
    ]
  },
  {
    "title": "Function Basics",
    "questions": [
      "What are functions useful for?",
      "How do you invoke a function?",
      "What are anonymous functions?",
      "What is function scope?",
      "What are return values?",
      "What are arrow functions?"
    ]
  },
  {
    "title": "Problem Solving",
    "questions": [
      "What are the three stages in the problem solving process?",
      "Why is it important to clearly understand the problem first?",
      "What can you do to help get a clearer understanding of the problem?",
      "What are some of the things you should do in the planning stage of the problem solving process?",
      "What is an algorithm?",
      "What is pseudocode?",
      "What are the advantages of breaking a problem down and solving the smaller problems?"
    ]
  },
  {
    "title": "Understanding Errors",
    "questions": [
      "What are three reasons why you may see a TypeError?",
      "What is the key difference between an error and a warning?",
      "What is one method you can use to resolve an error?"
    ]
  },
  {
    "title": "Project: Rock Paper Scissors",
    "questions": null
  },
  {
    "title": "Clean Code",
    "questions": [
      "Why is it important to write clean code?",
      "Name 5 clean code principles previously mentioned",
      "What is the difference between good comments and bad comments?"
    ]
  },
  {
    "title": "Installing Node.js",
    "questions": null
  },
  {
    "title": "Arrays and Loops",
    "questions": [
      "What is an array?",
      "What are arrays useful for?",
      "How do you access an array element?",
      "How do you change an array element?",
      "What are some useful array properties?",
      "What are some useful array methods?",
      "What are loops useful for?",
      "What is the break statement?",
      "What is the continue statement?",
      "What is the advantage of writing automated tests?"
    ]
  },
  {
    "title": "DOM Manipulation and Events",
    "questions": [
      "What is the DOM?",
      "How do you target the nodes you want to work with?",
      "How do you create an element in the DOM?",
      "How do you add an element to the DOM?",
      "How do you remove an element from the DOM?",
      "How can you alter an element in the DOM?",
      "When adding text to a DOM element, should you use textContent or innerHTML? Why?",
      "Where should you include your JavaScript tag in your HTML file when working with DOM nodes?",
      "How do “events” and “listeners” work?",
      "What are three ways to use events in your code?",
      "Why are event listeners the preferred way to handle events?",
      "What are the benefits of using named functions in your listeners?",
      "How do you attach listeners to groups of nodes?",
      "What is the difference between the return values of querySelector and querySelectorAll?",
      "What does a “NodeList” contain?",
      "Explain the difference between “capture” and “bubbling”."
    ]
  },
  {
    "title": "Revisiting Rock Paper Scissors",
    "questions": null
  },
  {
    "title": "Project: Etch-a-Sketch",
    "questions": null
  },
  {
    "title": "Object Basics",
    "questions": [
      "What is the difference between objects and arrays?",
      "How do you access object properties?",
      "What is Array.prototype.map() useful for?",
      "What is Array.prototype.filter() useful for?",
      "What is Array.prototype.reduce() useful for?"
    ]
  },
  {
    "title": "Project: Calculator",
    "questions": null
  },
  {
    "title": "Choose Your Path Forward",
    "questions": null
  },
  {
    "title": "How This Course Will Work",
    "questions": null
  },
  {
    "title": "Installing Ruby",
    "questions": null
  },
  {
    "title": "Basic Data Types",
    "questions": [
      "What are the basic arithmetic operators you can use on numbers?",
      "What’s the difference between an integer and a float?",
      "What method would you use to convert a float to an integer?",
      "What method would you use to convert an integer to a float?",
      "What is a string?",
      "What are the differences between single and double quotes?",
      "What is string interpolation?",
      "How do you concatenate strings?",
      "What method would you use to change all the characters in your string to upper case?",
      "What method would you use to split up strings into arrays?",
      "What are escape characters?",
      "How do you access a specific character or substring?",
      "How do you convert other data types into strings?",
      "What is a symbol?",
      "How do you create a symbol?",
      "What’s the difference between a symbol and a string?",
      "What does true represent?",
      "What does false represent?",
      "What does nil represent?"
    ]
  },
  {
    "title": "Variables",
    "questions": [
      "What is a variable?",
      "How do you assign a value or an expression to a variable?",
      "What does the += assignment operator do?",
      "What does the -= assignment operator do?",
      "What does the *= assignment operator do?",
      "What does the /= assignment operator do?",
      "What are the variable naming conventions?"
    ]
  },
  {
    "title": "Input and Output",
    "questions": [
      "What are the two methods we can use to output data to the user’s screen?",
      "What is similar between these two output methods?",
      "What is different between these two output methods?",
      "What is the method you can use to get input from the user?",
      "What is at least one difference between the output and input methods?"
    ]
  },
  {
    "title": "Conditional Logic",
    "questions": [
      "What is a Boolean?",
      "What are “truthy” values?",
      "Are the following considered true or false: nil, 0, \"0\", \"\", 1, [], {} and -1?",
      "When do you use elsif?",
      "When do you use unless?",
      "What do || and && and ! do?",
      "What is short circuit evaluation?",
      "What is returned by puts(\"woah\") || true?",
      "What is the ternary operator?",
      "When should you use a case statement?"
    ]
  },
  {
    "title": "Loops",
    "questions": [
      "What is a loop and why it is useful?",
      "What is a loop loop, and how would you use it?",
      "What is a while loop, and how would you use it?",
      "What is a for loop, and how would you use it?",
      "What is a #times loop, and how would you use it?",
      "What is an until loop, and how would you use it?",
      "What are the #upto and #downto loops, and how would you use them?"
    ]
  },
  {
    "title": "Arrays",
    "questions": [
      "What is an array and why is it useful?",
      "What are two ways to create a new empty array?",
      "What are some ways of accessing the elements in an array?",
      "What are 3 ways to add data to an array?",
      "How can you remove elements from an array?"
    ]
  },
  {
    "title": "Hashes",
    "questions": [
      "What are the differences between hashes and arrays?",
      "What are keys and values in a hash?",
      "How can you create a new hash?",
      "How can you populate a hash with data?",
      "How can you change existing values within a hash?",
      "How can you delete existing data from a hash?",
      "How can you merge two hashes together?",
      "Why is it preferred to use symbols as hash keys?"
    ]
  },
  {
    "title": "Methods",
    "questions": [
      "How would you create your own method?",
      "How would you call your new method?",
      "How do you pass variables to your method?",
      "How do you define default parameters for your method?",
      "What is the difference between an explicit return and an implicit return?",
      "What is the difference between puts and return?",
      "How do you chain multiple methods together?",
      "Give an example of a valid method name and an invalid method name.",
      "What is snake case?",
      "What are some of Ruby’s reserved words?",
      "What do you call a method that returns true or false? What is their naming convention?",
      "What do bang methods do? What is their naming convention?"
    ]
  },
  {
    "title": "Debugging",
    "questions": [
      "What is a stack trace?",
      "What is generally the most useful line in a stack trace?",
      "What are the two things you can learn from the first line of a stack trace?",
      "How do puts and Pry help you in the debugging process?",
      "What should you use instead of puts for nil values?",
      "Where should you start with debugging if you encounter a runtime error?",
      "Where should you start with debugging if your program runs but does not work the way you expect?"
    ]
  },
  {
    "title": "Basic Enumerable Methods",
    "questions": [
      "What does the #each method do? What does it return?",
      "What does the #each_with_index method do?",
      "What does the #map method do?",
      "What does the #select method do?",
      "What does the #reduce method do?",
      "When should you use do...end around a code block versus {...}?",
      "Why should you avoid using the bang methods of enumerables?"
    ]
  },
  {
    "title": "Predicate Enumerable Methods",
    "questions": [
      "Why is there a question mark after some method names?",
      "What does the #include? method do?",
      "What does the #any? method do?",
      "What does the #all? method do?",
      "What does the #none? method do?"
    ]
  },
  {
    "title": "Nested Collections",
    "questions": [
      "What is a nested array? What data is useful to store in a nested array?",
      "What is a nested hash? What data is useful to store in a nested hash?",
      "How do you access elements in a nested array?",
      "How do you access data in a nested hash?",
      "Why is the #dig method useful?",
      "How do you add elements to a nested array?",
      "How do you add data to a nested hash?",
      "How do you delete elements from a nested array?",
      "How do you delete data in a nested hash?",
      "How do you create a new nested array that is not mutable?",
      "How do you iterate over a nested array?",
      "How do you iterate over a nested hash?"
    ]
  },
  {
    "title": "Project: Caesar Cipher",
    "questions": null
  },
  {
    "title": "Project: Sub Strings",
    "questions": null
  },
  {
    "title": "Project: Stock Picker",
    "questions": null
  },
  {
    "title": "Project: Bubble Sort",
    "questions": null
  },
  {
    "title": "Object Oriented Programming",
    "questions": [
      "What is a class?",
      "What are getters and setters?",
      "What is inheritance?",
      "What is a scope?",
      "When is a new scope defined?",
      "What is the purpose of instance variables?",
      "What is the difference between class variables and instance variables?"
    ]
  },
  {
    "title": "Project: Tic Tac Toe",
    "questions": null
  },
  {
    "title": "Project: Mastermind",
    "questions": null
  },
  {
    "title": "Files and Serialization",
    "questions": [
      "How would you go through the lines of a file using an IO object?",
      "How would you take the Array [1,2,3] and serialize it into a JSON string format?",
      "What are the benefits of YAML vs JSON vs MessagePack serialization formats?",
      "How can you check if a file or directory exists?",
      "How can you list a directory’s contents in the form of an array?"
    ]
  },
  {
    "title": "Project: Event Manager",
    "questions": null
  },
  {
    "title": "Project: Hangman",
    "questions": null
  },
  {
    "title": "Pattern Matching",
    "questions": [
      "What is pattern matching?",
      "What is the difference between array patterns and hash patterns?",
      "What is the variable pattern match?",
      "What are the different ways of pattern matching on an array?",
      "Explain the find pattern."
    ]
  },
  {
    "title": "Blocks",
    "questions": [
      "What is a block?",
      "How is a block like a method?",
      "What are the two ways to declare a block?",
      "How do you return data from a block?",
      "How can your methods collect the return data from a block?",
      "What happens if you include a return statement in a block?",
      "What does yield do?",
      "How do you pass arguments to a block from within a method?",
      "How do you check whether a block was actually passed in?",
      "What is a proc?",
      "What is a lambda?",
      "What’s different between a lambda and a proc?",
      "How do you convert a proc to a block?",
      "How do you convert a block to a proc?"
    ]
  },
  {
    "title": "Project: Custom Enumerables",
    "questions": null
  },
  {
    "title": "A Very Brief Intro to CS",
    "questions": [
      "What is an Algorithm?",
      "What is the importance of algorithms in web development?",
      "What is pseudocode?"
    ]
  },
  {
    "title": "Recursive Methods",
    "questions": [
      "How would you briefly define a recursive function?",
      "What is the point of recursion? Is it more efficient than using a plain loop?",
      "What are the 2 essential parts in a recursive function?",
      "Why is “stack overflow” relevant to a recursive problem?"
    ]
  },
  {
    "title": "Project: Recursion",
    "questions": null
  },
  {
    "title": "Time Complexity",
    "questions": [
      "What is Big O?",
      "What are the Big O Notations?",
      "Why use Big O?",
      "What is Big Omega and why isn’t it as useful?"
    ]
  },
  {
    "title": "Space Complexity",
    "questions": [
      "What is space complexity?",
      "How do we measure space complexity?",
      "What are the main considerations we should consider before optimising code?"
    ]
  },
  {
    "title": "Common Data Structures and Algorithms",
    "questions": [
      "What is the difference between a stack and a queue?",
      "How would you implement a queue in Ruby?",
      "What is a linked list? What is a node?",
      "Which recursive problem-solving method/algorithm design principle does binary search implement?",
      "What abstract data type would you use to defer/store nodes in a breadth-first tree traversal?",
      "What abstract data type would you use to defer/store nodes in a depth-first tree traversal?"
    ]
  },
  {
    "title": "Project: Linked Lists",
    "questions": null
  },
  {
    "title": "HashMap Data Structure",
    "questions": [
      "What does it mean to hash?",
      "What are buckets?",
      "What is a collision?",
      "When is it a good time to grow our table?"
    ]
  },
  {
    "title": "Project: HashMap",
    "questions": null
  },
  {
    "title": "Project: Binary Search Trees",
    "questions": null
  },
  {
    "title": "Project: Knights Travails",
    "questions": null
  },
  {
    "title": "A Deeper Look at Git",
    "questions": [
      "Explain what it means for branches to be pointers.",
      "How can you amend your last commit?",
      "What are some different ways to rewrite history?"
    ]
  },
  {
    "title": "Working with Remotes",
    "questions": [
      "What is a safe way to push history changes to a remote repository?",
      "What are the dangers of history-changing operations?",
      "What are best practices of history-changing operations?"
    ]
  },
  {
    "title": "Using Git in the Real World",
    "questions": [
      "What name is typically given for a Git remote that points to a repo that’s been forked?",
      "Can you directly send your changes to a repository that you don’t own/have write access to?",
      "What should you do immediately before merging your feature branch into main?"
    ]
  },
  {
    "title": "Test Driven Development",
    "questions": [
      "What is the “red-green-refactor” cycle?",
      "What is the difference between unit and integration tests?",
      "How does TDD help in code refactoring?"
    ]
  },
  {
    "title": "Introduction to RSpec",
    "questions": [
      "What do you name the folder that contains your test files?",
      "What does the keyword describe define?",
      "What does the keyword it define?",
      "How many expect clauses can you write for one test case?",
      "What are some of RSpec’s equality matchers?",
      "How do we tell RSpec where to find the code to be tested?"
    ]
  },
  {
    "title": "Project: Connect Four",
    "questions": null
  },
  {
    "title": "Project: Ruby Final Project",
    "questions": null
  },
  {
    "title": "Conclusion",
    "questions": null
  },
  {
    "title": "How This Course Will Work",
    "questions": null
  },
  {
    "title": "Professional Networking",
    "questions": null
  },
  {
    "title": "Strategy",
    "questions": null
  },
  {
    "title": "It Starts with YOU",
    "questions": null
  },
  {
    "title": "What Companies Want",
    "questions": null
  },
  {
    "title": "What You Can Do to Prepare",
    "questions": null
  },
  {
    "title": "Project: Building Your Personal Website",
    "questions": null
  },
  {
    "title": "Collecting Job Leads",
    "questions": null
  },
  {
    "title": "Qualifying Job Leads",
    "questions": null
  },
  {
    "title": "Project: Building Your Resume",
    "questions": null
  },
  {
    "title": "Applying for Web Development Jobs",
    "questions": null
  },
  {
    "title": "Preparing to Interview and Interviewing",
    "questions": null
  },
  {
    "title": "Handling a Job Offer",
    "questions": null
  },
  {
    "title": "Conclusion",
    "questions": null
  },
  {
    "title": "How This Course Will Work",
    "questions": null
  },
  {
    "title": "A Quick Review",
    "questions": null
  },
  {
    "title": "Organizing Your Javascript Code Introduction",
    "questions": null
  },
  {
    "title": "Objects and Object Constructors",
    "questions": [
      "Write an object constructor and instantiate the object.",
      "Describe what a prototype is and how it can be used.",
      "Explain prototypal inheritance.",
      "Understand the basic do’s and don’t’s of prototypal inheritance.",
      "How does this behave in different situations?"
    ]
  },
  {
    "title": "Project: Library",
    "questions": null
  },
  {
    "title": "Factory Functions and the Module Pattern",
    "questions": [
      "Explain how scope works in JavaScript.",
      "Explain what closures are and how they help in creating private variables.",
      "Describe the common issues that you can face when working with constructors.",
      "Describe private variables in factory functions and how they can be useful.",
      "Describe how we can implement prototypal inheritance with factory functions.",
      "Explain how the module pattern works.",
      "Describe IIFEs and what they stand for.",
      "Explain the concept of namespacing and how factory functions help with encapsulation."
    ]
  },
  {
    "title": "Project: Tic Tac Toe",
    "questions": null
  },
  {
    "title": "Classes",
    "questions": [
      "Describe the pros and cons of using classes in JavaScript.",
      "How does JavaScript’s object creation differ from a language like Java or Ruby?",
      "Explain the differences between object constructors and classes.",
      "What are “getters” & “setters”?",
      "Describe computed names and class fields.",
      "Describe function binding.",
      "Describe static properties.",
      "Describe private class features.",
      "How is inheritance used with classes?",
      "Why is favoring Composition over Inheritance suggested?"
    ]
  },
  {
    "title": "ES6 Modules",
    "questions": [
      "Explain what npm is and where it was commonly used before being adopted on the frontend.",
      "Describe what npm init does and what package.json is.",
      "Know how to install packages using npm.",
      "Describe what a JavaScript module bundler like webpack is.",
      "Explain what the concepts “entry” and “output” mean in relation to webpack.",
      "Briefly explain what a development dependency is.",
      "Explain what “transpiling code” means and how it relates to frontend development.",
      "Briefly describe what a task runner is and how it’s used in frontend development.",
      "Describe how to write an npm automation script.",
      "Explain one of the main benefits of writing code in modules.",
      "Explain “named exports” and “default exports”."
    ]
  },
  {
    "title": "Webpack",
    "questions": [
      "How do you load CSS using webpack?",
      "How do you load images using webpack?",
      "How do you load fonts using webpack?",
      "How do you automatically build HTML files in dist using webpack?",
      "How do you automatically build an HTML file in dist using a custom template in src?",
      "How would you track errors in bundled source code?"
    ]
  },
  {
    "title": "Project: Restaurant Page",
    "questions": null
  },
  {
    "title": "JSON",
    "questions": null
  },
  {
    "title": "OOP Principles",
    "questions": [
      "Explain the “Single Responsibility Principle”.",
      "Briefly explain the additional SOLID principles.",
      "Explain what “tightly coupled” objects are and why we want to avoid them."
    ]
  },
  {
    "title": "Project: Todo List",
    "questions": null
  },
  {
    "title": "Linting",
    "questions": [
      "What is linting?",
      "Which problems can linting prevent?",
      "Why should you use Prettier?",
      "What is a template repository?"
    ]
  },
  {
    "title": "Dynamic User Interface Interactions",
    "questions": [
      "What are some different types of navigation menus?",
      "What are the alternatives to hamburger menus?",
      "What are the downsides of hamburger menus?"
    ]
  },
  {
    "title": "Form Validation with JavaScript",
    "questions": [
      "Explain the importance of validating HTML forms before submitting them to a server.",
      "Describe the two types of client-side form validation.",
      "Explain how JavaScript Constraint Validation API provides more control and customization of form validation.",
      "Could forms also be validated without using Constraint Validation API?"
    ]
  },
  {
    "title": "What is ES6?",
    "questions": null
  },
  {
    "title": "Asynchronous Code",
    "questions": [
      "What is a callback?",
      "What is a promise?",
      "When should you use promises over callbacks?",
      "What does the .then() function do?"
    ]
  },
  {
    "title": "Working with APIs",
    "questions": [
      "What is an API?",
      "How is access to an API restricted?",
      "How do you fetch and extract data from an API?",
      "Why might your API request be blocked by the browser, and how might you fix this?"
    ]
  },
  {
    "title": "Async and Await",
    "questions": [
      "How do you declare an async function?",
      "What does the async keyword do?",
      "What does the await keyword do?",
      "What is returned from an async function?",
      "What happens when an error is thrown inside an async function?",
      "How can you handle errors inside an async function?"
    ]
  },
  {
    "title": "Project: Weather App",
    "questions": null
  },
  {
    "title": "Testing Basics",
    "questions": [
      "What are the benefits of TDD?",
      "What are some common jest matchers?"
    ]
  },
  {
    "title": "Project: Testing Practice",
    "questions": null
  },
  {
    "title": "More Testing",
    "questions": [
      "What is tightly coupled code?",
      "What are the two requirements for a function to be pure?",
      "What are side effects and why is it important to identify them when testing a function?",
      "What should you try before testing tightly coupled code?",
      "How can you test code that can’t be decoupled?",
      "What is mocking?",
      "When would you use a mock function?",
      "How should you test incoming query messages?",
      "Why should you not test implementation?",
      "Should you test private methods?",
      "Why should you not test outgoing messages with no side effects?"
    ]
  },
  {
    "title": "Project: Battleship",
    "questions": null
  },
  {
    "title": "Conclusion",
    "questions": null
  },
  {
    "title": "Databases",
    "questions": [
      "What is a database?",
      "What are relational databases?",
      "What is a Primary Key?",
      "What is SQL?",
      "How do you get all the records from a table in SQL?",
      "How do you insert a record in SQL?"
    ]
  },
  {
    "title": "Databases and SQL",
    "questions": [
      "What is the difference between a foreign key and a primary key?",
      "Where is the setup information for your database stored?",
      "What are the important parts of a SQL command?",
      "Which SQL statement is associated with “Read” from the CRUD acronym?",
      "Which JOIN statement keeps only the rows from both tables where they match up?",
      "How do you use an aggregate function?",
      "In which situation would you use the HAVING function?",
      "Why can’t I just use Ruby to process my database data?"
    ]
  },
  {
    "title": "Project: SQL Zoo",
    "questions": null
  },
  {
    "title": "Introduction to the Back End",
    "questions": [
      "What is back-end development?",
      "How many parts does the backend consist of?",
      "Name each part of the backend.",
      "Where does the backend store its data?"
    ]
  },
  {
    "title": "Introduction to Frameworks",
    "questions": [
      "What problems do frameworks solve?",
      "Name some popular front-end and back-end frameworks.",
      "Describe the process of choosing a framework."
    ]
  },
  {
    "title": "Introduction: What is NodeJS?",
    "questions": [
      "What is Node?"
    ]
  },
  {
    "title": "Getting Started",
    "questions": [
      "What is a File System Module? How and why would you use it?",
      "What is the command for installing a package locally in with npm?",
      "What is the command for installing a package globally in with npm?",
      "What is the difference between a global and local package install with npm?"
    ]
  },
  {
    "title": "Debugging Node",
    "questions": [
      "What are two ways to debug Node?"
    ]
  },
  {
    "title": "Project: Basic Informational Site",
    "questions": null
  },
  {
    "title": "Introduction to MongoDB",
    "questions": [
      "What is the difference between a relational database and a non-relational database?"
    ]
  },
  {
    "title": "Introduction to Express",
    "questions": [
      "What is Express?",
      "What is a module?",
      "Which are the four most used methods to define route handlers?",
      "How do we handle errors?",
      "How do you use the Express library with NPM in a project?"
    ]
  },
  {
    "title": "Express 101",
    "questions": [
      "What is middleware?",
      "What is the req object?",
      "What is the res object?",
      "Why is next important?",
      "What does app.use do?"
    ]
  },
  {
    "title": "Express 102: CRUD and MVC",
    "questions": null
  },
  {
    "title": "Project: Mini Message Board",
    "questions": null
  },
  {
    "title": "Deployment",
    "questions": [
      "What’s the difference between static and dynamic websites?",
      "What does ‘PaaS’ stand for?",
      "What are the advantages of using a PaaS hosting provider?",
      "What is an instance?",
      "What steps can you take to diagnose an issue that arises during deployment?",
      "What steps can you take to diagnose an issue that only appears after deployment?"
    ]
  },
  {
    "title": "Express 103: Routes and Controllers",
    "questions": [
      "How do you define a route function in Express?",
      "Name four HTTP verbs a route might need to handle.",
      "What is a route parameter, and what syntax is used to define one in a route handler?",
      "What is a route-handler callback function commonly called?"
    ]
  },
  {
    "title": "Express 104: View Templates",
    "questions": null
  },
  {
    "title": "Project: Express 105: Forms and Deployment",
    "questions": null
  },
  {
    "title": "Project: Inventory Application",
    "questions": null
  },
  {
    "title": "Authentication Basics",
    "questions": [
      "Which passportJS strategy did we use in the lesson?",
      "Why does passportJS create a cookie?",
      "What does the bcrypt.compare() function do?",
      "Why should we include bcrypt when we begin a project?"
    ]
  },
  {
    "title": "Security Configuration",
    "questions": [
      "What special kind of variable can be used on a server to store secrets?",
      "What are two widely used packages that can be used to store and import these variables?",
      "What is the name of the file dotenv looks for when injecting these variables into our app?"
    ]
  },
  {
    "title": "Project: Members Only",
    "questions": null
  },
  {
    "title": "API Basics",
    "questions": [
      "What does REST stand for?",
      "What are HTTP verbs and why are they important to an API?",
      "What is the Same-Origin Policy?",
      "How do you enable CORS in your Express app?",
      "Which HTTP verb does each letter in CRUD (Create, Read, Update, Delete) correspond to?"
    ]
  },
  {
    "title": "API Security",
    "questions": [
      "What is a JSON web token?",
      "What are two things a secure token will do?",
      "Where in the code is a secure token passed?"
    ]
  },
  {
    "title": "Project: Blog API",
    "questions": null
  },
  {
    "title": "Testing Routes and Controllers",
    "questions": null
  },
  {
    "title": "Testing Database Operations",
    "questions": [
      "What is the purpose of using a separate database for testing?",
      "How would you create and setup a testing database using the npm package mongodb-memory-server?",
      "What is an alternative method of database setup for your testing environment?"
    ]
  },
  {
    "title": "Project: Where's Waldo (A Photo Tagging App)",
    "questions": null
  },
  {
    "title": "Project: Messaging App",
    "questions": null
  },
  {
    "title": "Project: Odin-Book",
    "questions": null
  },
  {
    "title": "Conclusion",
    "questions": null
  },
  {
    "title": "How This Course Will Work",
    "questions": null
  },
  {
    "title": "A Quick Review",
    "questions": null
  },
  {
    "title": "Organizing Your Javascript Code Introduction",
    "questions": null
  },
  {
    "title": "Objects and Object Constructors",
    "questions": [
      "Write an object constructor and instantiate the object.",
      "Describe what a prototype is and how it can be used.",
      "Explain prototypal inheritance.",
      "Understand the basic do’s and don’t’s of prototypal inheritance.",
      "How does this behave in different situations?"
    ]
  },
  {
    "title": "Project: Library",
    "questions": null
  },
  {
    "title": "Factory Functions and the Module Pattern",
    "questions": [
      "Explain how scope works in JavaScript.",
      "Explain what closures are and how they help in creating private variables.",
      "Describe the common issues that you can face when working with constructors.",
      "Describe private variables in factory functions and how they can be useful.",
      "Describe how we can implement prototypal inheritance with factory functions.",
      "Explain how the module pattern works.",
      "Describe IIFEs and what they stand for.",
      "Explain the concept of namespacing and how factory functions help with encapsulation."
    ]
  },
  {
    "title": "Project: Tic Tac Toe",
    "questions": null
  },
  {
    "title": "Classes",
    "questions": [
      "Describe the pros and cons of using classes in JavaScript.",
      "How does JavaScript’s object creation differ from a language like Java or Ruby?",
      "Explain the differences between object constructors and classes.",
      "What are “getters” & “setters”?",
      "Describe computed names and class fields.",
      "Describe function binding.",
      "Describe static properties.",
      "Describe private class features.",
      "How is inheritance used with classes?",
      "Why is favoring Composition over Inheritance suggested?"
    ]
  },
  {
    "title": "ES6 Modules",
    "questions": [
      "Explain what npm is and where it was commonly used before being adopted on the frontend.",
      "Describe what npm init does and what package.json is.",
      "Know how to install packages using npm.",
      "Describe what a JavaScript module bundler like webpack is.",
      "Explain what the concepts “entry” and “output” mean in relation to webpack.",
      "Briefly explain what a development dependency is.",
      "Explain what “transpiling code” means and how it relates to frontend development.",
      "Briefly describe what a task runner is and how it’s used in frontend development.",
      "Describe how to write an npm automation script.",
      "Explain one of the main benefits of writing code in modules.",
      "Explain “named exports” and “default exports”."
    ]
  },
  {
    "title": "Webpack",
    "questions": [
      "How do you load CSS using webpack?",
      "How do you load images using webpack?",
      "How do you load fonts using webpack?",
      "How do you automatically build HTML files in dist using webpack?",
      "How do you automatically build an HTML file in dist using a custom template in src?",
      "How would you track errors in bundled source code?"
    ]
  },
  {
    "title": "Project: Restaurant Page",
    "questions": null
  },
  {
    "title": "JSON",
    "questions": null
  },
  {
    "title": "OOP Principles",
    "questions": [
      "Explain the “Single Responsibility Principle”.",
      "Briefly explain the additional SOLID principles.",
      "Explain what “tightly coupled” objects are and why we want to avoid them."
    ]
  },
  {
    "title": "Project: Todo List",
    "questions": null
  },
  {
    "title": "Linting",
    "questions": [
      "What is linting?",
      "Which problems can linting prevent?",
      "Why should you use Prettier?",
      "What is a template repository?"
    ]
  },
  {
    "title": "Dynamic User Interface Interactions",
    "questions": [
      "What are some different types of navigation menus?",
      "What are the alternatives to hamburger menus?",
      "What are the downsides of hamburger menus?"
    ]
  },
  {
    "title": "Form Validation with JavaScript",
    "questions": [
      "Explain the importance of validating HTML forms before submitting them to a server.",
      "Describe the two types of client-side form validation.",
      "Explain how JavaScript Constraint Validation API provides more control and customization of form validation.",
      "Could forms also be validated without using Constraint Validation API?"
    ]
  },
  {
    "title": "What is ES6?",
    "questions": null
  },
  {
    "title": "Asynchronous Code",
    "questions": [
      "What is a callback?",
      "What is a promise?",
      "When should you use promises over callbacks?",
      "What does the .then() function do?"
    ]
  },
  {
    "title": "Working with APIs",
    "questions": [
      "What is an API?",
      "How is access to an API restricted?",
      "How do you fetch and extract data from an API?",
      "Why might your API request be blocked by the browser, and how might you fix this?"
    ]
  },
  {
    "title": "Async and Await",
    "questions": [
      "How do you declare an async function?",
      "What does the async keyword do?",
      "What does the await keyword do?",
      "What is returned from an async function?",
      "What happens when an error is thrown inside an async function?",
      "How can you handle errors inside an async function?"
    ]
  },
  {
    "title": "Project: Weather App",
    "questions": null
  },
  {
    "title": "A Very Brief Intro to CS",
    "questions": [
      "What is an Algorithm?",
      "What is the importance of algorithms in web development?",
      "What is pseudocode?"
    ]
  },
  {
    "title": "Recursive Methods",
    "questions": [
      "How would you briefly define a recursive function?",
      "What is the point of recursion? Is it more efficient than using a plain loop?",
      "What are the 2 essential parts in a recursive function?",
      "Why is “stack overflow” relevant to a recursive problem?"
    ]
  },
  {
    "title": "Project: Recursion",
    "questions": null
  },
  {
    "title": "Time Complexity",
    "questions": [
      "What is Big O?",
      "What are the Big O Notations?",
      "Why use Big O?",
      "What is Big Omega and why isn’t it as useful?"
    ]
  },
  {
    "title": "Space Complexity",
    "questions": [
      "What is space complexity?",
      "How do we measure space complexity?",
      "What are the main considerations we should take into account when optimising code?"
    ]
  },
  {
    "title": "Common Data Structures and Algorithms",
    "questions": [
      "What is the difference between a stack and a queue?",
      "What are the enqueue and dequeue properties?",
      "What is a linked list? What is a node?",
      "Which recursive problem-solving method/algorithm design principle does binary search implement?",
      "What abstract data type would you use to defer/store nodes in a breadth-first tree traversal?",
      "What abstract data type would you use to defer/store nodes in a depth-first tree traversal?"
    ]
  },
  {
    "title": "Project: Linked Lists",
    "questions": null
  },
  {
    "title": "HashMap Data Structure",
    "questions": [
      "What does it mean to hash?",
      "What are buckets?",
      "What is a collision?",
      "When is it a good time to grow our table?"
    ]
  },
  {
    "title": "Project: HashMap",
    "questions": null
  },
  {
    "title": "Project: Binary Search Trees",
    "questions": null
  },
  {
    "title": "Project: Knights Travails",
    "questions": null
  },
  {
    "title": "A Deeper Look at Git",
    "questions": [
      "Explain what it means for branches to be pointers.",
      "How can you amend your last commit?",
      "What are some different ways to rewrite history?"
    ]
  },
  {
    "title": "Working with Remotes",
    "questions": [
      "What is a safe way to push history changes to a remote repository?",
      "What are the dangers of history-changing operations?",
      "What are best practices of history-changing operations?"
    ]
  },
  {
    "title": "Using Git in the Real World",
    "questions": [
      "What name is typically given for a Git remote that points to a repo that’s been forked?",
      "Can you directly send your changes to a repository that you don’t own/have write access to?",
      "What should you do immediately before merging your feature branch into main?"
    ]
  },
  {
    "title": "Testing Basics",
    "questions": [
      "What are the benefits of TDD?",
      "What are some common jest matchers?"
    ]
  },
  {
    "title": "Project: Testing Practice",
    "questions": null
  },
  {
    "title": "More Testing",
    "questions": [
      "What is tightly coupled code?",
      "What are the two requirements for a function to be pure?",
      "What are side effects and why is it important to identify them when testing a function?",
      "What should you try before testing tightly coupled code?",
      "How can you test code that can’t be decoupled?",
      "What is mocking?",
      "When would you use a mock function?",
      "How should you test incoming query messages?",
      "Why should you not test implementation?",
      "Should you test private methods?",
      "Why should you not test outgoing messages with no side effects?"
    ]
  },
  {
    "title": "Project: Battleship",
    "questions": null
  },
  {
    "title": "Conclusion",
    "questions": null
  },
  {
    "title": "How This Course Will Work",
    "questions": null
  },
  {
    "title": "Professional Networking",
    "questions": null
  },
  {
    "title": "Strategy",
    "questions": null
  },
  {
    "title": "It Starts with YOU",
    "questions": null
  },
  {
    "title": "What Companies Want",
    "questions": null
  },
  {
    "title": "What You Can Do to Prepare",
    "questions": null
  },
  {
    "title": "Project: Building Your Personal Website",
    "questions": null
  },
  {
    "title": "Collecting Job Leads",
    "questions": null
  },
  {
    "title": "Qualifying Job Leads",
    "questions": null
  },
  {
    "title": "Project: Building Your Resume",
    "questions": null
  },
  {
    "title": "Applying for Web Development Jobs",
    "questions": null
  },
  {
    "title": "Preparing to Interview and Interviewing",
    "questions": null
  },
  {
    "title": "Handling a Job Offer",
    "questions": null
  },
  {
    "title": "Conclusion",
    "questions": null
  },
  {
    "title": "How This Course Will Work",
    "questions": null
  },
  {
    "title": "Introduction To React",
    "questions": [
      "What is the purpose of React?",
      "What are the benefits of using React?"
    ]
  },
  {
    "title": "Setting Up A React Environment",
    "questions": [
      "What are some of the ways we can start a new React project?",
      "Why should we initially be using pre-made toolchains instead of making our own?",
      "What is Vite and why would we use it?",
      "What command can we run to scaffold a new React project using Vite?",
      "What is in the public folder?",
      "What is in the src folder?",
      "Why are the React Developer Tools useful?"
    ]
  },
  {
    "title": "React Components",
    "questions": [
      "What does a React element look like?",
      "How would you create a functional component?",
      "How do you export and then import a component?"
    ]
  },
  {
    "title": "What Is JSX?",
    "questions": null
  },
  {
    "title": "Rendering Techniques",
    "questions": [
      "How do you render a list of elements/components in JSX?",
      "What are the ways you could render UI conditionally?",
      "How would you conditionally return JSX?"
    ]
  },
  {
    "title": "Keys In React",
    "questions": [
      "Why does React need keys?",
      "How do you use keys?",
      "Where should the key value ideally come from?",
      "When can we use an array index as the key value?",
      "What is an anti-pattern when using keys?"
    ]
  },
  {
    "title": "Passing Data Between Components",
    "questions": [
      "How does data flow between React components? From child to parent? From parent to child? Both?",
      "Why do we use props in React?",
      "How do we define default properties on a React component? What are some benefits in doing so?",
      "How can we pass functions as props?"
    ]
  },
  {
    "title": "Introduction To State",
    "questions": [
      "What is state?",
      "What is the useState hook and how to use it?",
      "What happens to the component when one of its state is changed?",
      "What are some of the rules of hooks?"
    ]
  },
  {
    "title": "More On State",
    "questions": [
      "What should you keep in mind while declaring state?",
      "Why should we always use setState to update our state?",
      "What does “state as a snapshot” mean?",
      "What’s the difference between passing a value vs a callback to the setState function?",
      "Why should we always provide a new Object to setState?",
      "Why would you want to control a component?"
    ]
  },
  {
    "title": "Project: CV Application",
    "questions": null
  },
  {
    "title": "How To Deal With Side Effects",
    "questions": [
      "What is an effect?",
      "What constitutes a useEffect hook?",
      "What is the one question we can ask to know when to use an effect?",
      "What do we mean by lifting up the state?"
    ]
  },
  {
    "title": "Project: Memory Card",
    "questions": null
  },
  {
    "title": "Class Based Components",
    "questions": [
      "How do props get used in a class-based component?",
      "How does JSX get displayed?",
      "How do we deal with state in a class-based component?",
      "How do you restore the context of this in a method?"
    ]
  },
  {
    "title": "Component Lifecycle Methods",
    "questions": [
      "What is the only required lifecycle method?",
      "What lifecycle method should you use for initial data fetching?",
      "When you want to act upon change of the DOM, or of state, what lifecycle method would you use?",
      "When performing cleanup actions, what lifecycle method should be used?",
      "How does the useEffect hook combine some of the lifecycle methods?"
    ]
  },
  {
    "title": "Introduction To React Testing",
    "questions": [
      "What packages are required for React testing?",
      "What is the significance of the user-event package?",
      "What does the render method do?",
      "What is the most preferred method for querying?",
      "How would you test for a click event with userEvent?",
      "What is the advantage of snapshot tests?",
      "What are the disadvantages of snapshot tests?"
    ]
  },
  {
    "title": "Mocking Callbacks And Components",
    "questions": [
      "How can you mock a callback handler?",
      "How can you mock a child component?"
    ]
  },
  {
    "title": "Type Checking With PropTypes",
    "questions": [
      "How would we set up a basic implementation of PropTypes?",
      "If we pass in a prop to a component that has a defaultProp defined, what would happen?",
      "What is the difference between PropTypes and TypeScript?"
    ]
  },
  {
    "title": "React Router",
    "questions": [
      "What does client-side routing mean?",
      "How do you set up a basic router?",
      "What should be used in place of “a” tags to enable client-side routing?",
      "How do you create nested routes?",
      "What do you mean by dynamic segments or URL params?",
      "How do you add a “catch-all” route?",
      "How do you pass data from parent to child through an <Outlet /> component?",
      "How do you create protected routes?"
    ]
  },
  {
    "title": "Fetching Data In React",
    "questions": [
      "How can you fetch data from an API in React?",
      "Why should you manually throw errors in fetch requests?",
      "How can you avoid waterfalling requests?"
    ]
  },
  {
    "title": "Styling React Applications",
    "questions": [
      "How can you use CSS Modules in your React app?",
      "What does CSS-in-JS mean?",
      "What are component libraries?"
    ]
  },
  {
    "title": "Project: Shopping Cart",
    "questions": null
  },
  {
    "title": "Managing State With The Context API",
    "questions": [
      "What are the benefits of using the Context API over passing props down through multiple levels of components?",
      "What are the drawbacks in using the Context API?",
      "What are the ways you can avoid prop drilling?"
    ]
  },
  {
    "title": "Reducing State",
    "questions": [
      "What are reducers?",
      "How would you declare a reducer?",
      "What does the dispatch function do?",
      "What steps can you follow to migrate from useState to useReducer?"
    ]
  },
  {
    "title": "Refs And Memoization",
    "questions": [
      "Why should you prefer useRef hook over other DOM manipulation methods like querySelector?",
      "What is the difference between useMemo and useCallback?",
      "How do useMemo and useCallback help optimize the performance of React components?",
      "When should you memoize a value?"
    ]
  },
  {
    "title": "Conclusion",
    "questions": null
  },
  {
    "title": "How This Course Will Work",
    "questions": null
  },
  {
    "title": "Introduction to the Back End",
    "questions": [
      "What is back-end development?",
      "How many parts does the backend consist of?",
      "Name each part of the backend.",
      "Where does the backend store its data?"
    ]
  },
  {
    "title": "Introduction to Frameworks",
    "questions": [
      "What problems do frameworks solve?",
      "Name some popular front-end and back-end frameworks.",
      "Describe the process of choosing a framework."
    ]
  },
  {
    "title": "Project: Installing Rails",
    "questions": null
  },
  {
    "title": "A Railsy Web Refresher",
    "questions": [
      "What do you call an HTTP message that goes from client to server?",
      "What do you call an HTTP message that goes from server to client?",
      "Which HTTP message would include a status code and which would include an action verb?",
      "What is the name of the additional information that is added after the path of a URL?",
      "What does MVC stand for?",
      "What is an “API”?",
      "Why do you need “cookies” to continue your “session”?",
      "What is the difference between “authentication” and “authorization”?"
    ]
  },
  {
    "title": "Routing",
    "questions": [
      "What is the purpose of the Rails router?",
      "How do you assign the root route of your application in the router?",
      "Assuming we have no knowledge of the HTTP-verb, which 3 RESTful controller actions could be triggered by the /photos/:id -route?",
      "How can you assign all of the RESTful routes for a resource - excluding the destroy-route - in just one line?",
      "How would you create a link in your app (without hardcoding), that directs you to /photos/10/edit?",
      "Which Chrome extension can you use to simulate HTTP-requests with an API?"
    ]
  },
  {
    "title": "Controllers",
    "questions": [
      "What does a controller do?",
      "Why is it important to adhere to the Rails naming convention for your controllers and all of its methods?",
      "What is the difference between render and redirect_to?",
      "Which variable in your controller contains all the data sent in by the user?",
      "Data from a client can never be trusted. Which helper method should you incorporate in your controller to prevent malicious data injections?",
      "When is a flash message shown?",
      "How do we change when a flash is shown?"
    ]
  },
  {
    "title": "Views",
    "questions": [
      "How do you make sure a preprocessor runs on your view file?",
      "What is the difference between <%, <%= and <%#?",
      "What does including <%= yield %> in a layout do?",
      "Why do we use partials?",
      "What is the shortcut for rendering a collection as a series of partials?",
      "How do you dynamically link to another page of your Rails app?"
    ]
  },
  {
    "title": "Project: Blog App",
    "questions": null
  },
  {
    "title": "Deployment",
    "questions": [
      "What’s the difference between static and dynamic websites?",
      "What does ‘PaaS’ stand for?",
      "What are the advantages of using a PaaS hosting provider?",
      "What is an instance?",
      "What steps can you take to diagnose an issue that arises during deployment?",
      "What steps can you take to diagnose an issue that only appears after deployment?"
    ]
  },
  {
    "title": "Active Record Basics",
    "questions": [
      "Should Active Record model classes be singular or plural?"
    ]
  },
  {
    "title": "Migrations",
    "questions": [
      "Which rails command will undo a database migration?"
    ]
  },
  {
    "title": "Basic Associations",
    "questions": [
      "If class A has a belongs_to association with class B, which class’s database table should contain a foreign key?"
    ]
  },
  {
    "title": "Basic Validations",
    "questions": [
      "What does the validation helper presence: true enforce?",
      "How can you see why an instance of a model class has failed validation?"
    ]
  },
  {
    "title": "Project: Micro-Reddit",
    "questions": null
  },
  {
    "title": "The Asset Pipeline",
    "questions": [
      "How does “asset concatenation” optimize loading of your app?",
      "How do you include an asset in your views or layout?",
      "What does the require_tree method do in a manifest-file?",
      "Why would you namespace your stylesheets?"
    ]
  },
  {
    "title": "Importmaps",
    "questions": [
      "Can you use import maps with npm packages?",
      "How do you download vendor files using import maps?",
      "How can you preload pinned modules?"
    ]
  },
  {
    "title": "Turbo Drive",
    "questions": null
  },
  {
    "title": "Form Basics",
    "questions": [
      "What is a CSRF Token and why is it necessary?",
      "What is the name attribute of a form input element and what does it do?",
      "How do you nest attributes under a single hash in params?",
      "How do you pass form_with a model object?",
      "How do you access errors for a failed-to-save model object?",
      "How do Rails forms make PATCH or DELETE requests?",
      "What is one case where you may need an array of hashes within the params hash?"
    ]
  },
  {
    "title": "Project: Forms",
    "questions": null
  },
  {
    "title": "Sessions Cookies and Authentication",
    "questions": [
      "How would you set a cookie for hair color on a user’s browser?",
      "How would you require a user is logged in before running some code?",
      "Would you use Basic HTTP Authentication for authenticating users over alternatives such as the Devise gem?",
      "How would you flash an error message on a user’s browser if they put an invalid username?",
      "What are some reasons you would want to use the Devise gem for user authentication over building your own authorization system?"
    ]
  },
  {
    "title": "Project: Members Only!",
    "questions": null
  },
  {
    "title": "Installing PostgreSQL",
    "questions": [
      "What are the typical environments that make up a pipeline?",
      "What is an environment variable?",
      "Why should we use environment variables?"
    ]
  },
  {
    "title": "Active Record Queries",
    "questions": [
      "How does lazy evaluation help make Active Record more efficient?",
      "How do you check whether a database already contains a record?",
      "What is the difference between a #where query and a #find query?",
      "How do you join tables together in Rails?",
      "What is an example of an N+1 query?",
      "What method is used to deal with an N+1 query?",
      "When would you use a class method in place of a scope?"
    ]
  },
  {
    "title": "Active Record Associations",
    "questions": [
      "What two pieces of information will Rails assume by default for associations?",
      "Which type of association may require the :source option to be specified?",
      "What is populated automatically when an object is created by an association?",
      "Can a polymorphic association use a single column foreign key?",
      "Can a model have associations with instances of the same model?"
    ]
  },
  {
    "title": "Project: Private Events",
    "questions": null
  },
  {
    "title": "Active Record Callbacks",
    "questions": [
      "How do you register a callback?",
      "What events happen in an Active Record object’s lifecycle?",
      "How can you make a callback run under specific conditions?",
      "When are transaction callbacks most useful?"
    ]
  },
  {
    "title": "Advanced Forms",
    "questions": [
      "What does the #select_tag helper do?",
      "When using #options_for_select, what format does the array need to be in?",
      "When would you use the #select helper?",
      "How can you prevent users from having to submit multiple forms?",
      "What do you add to the model that allows nested forms to create new objects?",
      "How do you allow the nested parameters in your controller?",
      "How can you set up a dropdown or checkbox to delete a record that already exists?"
    ]
  },
  {
    "title": "Project: Flight Booker",
    "questions": null
  },
  {
    "title": "APIs and Building Your Own",
    "questions": [
      "How does Rails know which type of file you are expecting back when you make an HTTP request?",
      "What is the purpose of the #respond_to method?",
      "How do you return a User object but specify that you don’t want to include certain attributes (i.e. you can’t just return User.first)?",
      "What are the two steps performed behind the scenes by the #to_json method?",
      "How do you tell a controller action to render nothing but an error message?",
      "How do you build your own custom error messages?",
      "Why can’t you use session-based controller authentication methods if you want people to access your API programmatically?",
      "What is “Service Oriented Architecture?"
    ]
  },
  {
    "title": "Working with External APIs",
    "questions": [
      "What’s the best way to locate an API’s docs?",
      "What is an API key?",
      "How do you avoid including an API’s secret token in your GitHub repo (e.g. hard coding it)?",
      "Why is it important to know which API version you’re using?",
      "Why would a user prefer to sign into your site using Facebook instead of giving you a new password?",
      "What are the different types of “security clearance” for the different types of API requests you can make?"
    ]
  },
  {
    "title": "Project: Kittens API",
    "questions": null
  },
  {
    "title": "Project: Flickr API",
    "questions": null
  },
  {
    "title": "CSS Bundling",
    "questions": null
  },
  {
    "title": "JS Bundling",
    "questions": [
      "What are the three different options that jsbundling-rails provides?",
      "What are the steps to including a bundler for an import map based project?",
      "What is one downside to using JS bundling?",
      "Why was Webpacker introduced for Rails 6?",
      "Why is the ./bin/dev command useful in development mode?"
    ]
  },
  {
    "title": "Turbo",
    "questions": [
      "What does SPA stand for and what is it?",
      "What is Hotwire?",
      "How do we use a Turbo Frame?",
      "How do we set up Turbo Streams?"
    ]
  },
  {
    "title": "Stimulus",
    "questions": [
      "When do you use Stimulus?",
      "How do you select a DOM element?",
      "How do you make your Stimulus controllers reusable?",
      "How do you trigger actions on an event?"
    ]
  },
  {
    "title": "Mailers",
    "questions": [
      "How do you create a new mailer from the command line?",
      "Where do you store the actual email in your application?",
      "How do you send an email directly from the Rails console?",
      "How do you use callbacks with mailers?",
      "How do you write links in mailer views?",
      "How do you style an HTML email?"
    ]
  },
  {
    "title": "Project: Sending Confirmation Emails",
    "questions": null
  },
  {
    "title": "Advanced Topics",
    "questions": [
      "What would the routes file line for a singular resource look like?",
      "How do you nest one resource inside another in the routes file?",
      "When do you use the #member method?",
      "When do you use a redirect?",
      "What are some techniques for rendering multiple layouts for one page?",
      "What does the #send method do?",
      "What are the five design principles represented by the SOLID acronym?"
    ]
  },
  {
    "title": "Websockets and Actioncable",
    "questions": null
  },
  {
    "title": "Project: Rails Final Project",
    "questions": null
  },
  {
    "title": "Conclusion",
    "questions": null
  }
]